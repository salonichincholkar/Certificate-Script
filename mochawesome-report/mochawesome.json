{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-20T09:57:28.232Z",
    "end": "2024-04-20T09:57:33.005Z",
    "duration": 4773,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7465ff0b-70d3-4112-815b-3ea383e892a5",
      "title": "",
      "fullFile": "H:\\Assignments\\Selenium\\Certificate Script\\test\\index.js",
      "file": "\\test\\index.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e6823368-5fae-46d7-bcb6-72fc052c321e",
          "title": "certificate",
          "fullFile": "H:\\Assignments\\Selenium\\Certificate Script\\test\\index.js",
          "file": "\\test\\index.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"certificate\"",
              "fullTitle": "certificate \"before all\" hook in \"certificate\"",
              "timedOut": false,
              "duration": 2376,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new webdriver.Builder().\nwithCapabilities(webdriver.Capabilities.chrome()).\nbuild();",
              "err": {},
              "uuid": "e8ccbecb-a9ac-412e-93be-7a61647ee0cd",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the validity of a given certificate number",
              "fullTitle": "certificate Verify the validity of a given certificate number",
              "timedOut": false,
              "duration": 2002,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('file:///H:/Assignments/Testing/01%20Kalpesh%20Shewale/MMEAC_Assignment_3-main/preview.html');\n    var getTitle = await driver.findElement(webdriver.By.className('sr-no'));\n    getTitle.getText('value').then(function(value) {\n    assert.match(value, '/Certificate Number: (\\d{4})/');\n    });",
              "err": {},
              "uuid": "e23f706d-6c04-476c-9735-4e37ef03f657",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Certificate Title",
              "fullTitle": "certificate Verify Certificate Title",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('title'));\ngetTitle.getText('value').then(function(value) {\n  assert.equal(value, 'Certificate');\n});",
              "err": {},
              "uuid": "6cad93a2-9866-4200-8b16-d4be70ab6350",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the certificate subtitle",
              "fullTitle": "certificate To verify the certificate subtitle",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('subtitle'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'of Appreciation');\n});",
              "err": {},
              "uuid": "9806f2cd-2141-4605-8f0e-ef39d8ec003c",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Initial Content of Certificate",
              "fullTitle": "certificate Verify Initial Content of Certificate",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('initial-content'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'This Certificate is proudly presented to');\n});",
              "err": {},
              "uuid": "1acee5cc-fd90-4c52-a00a-838eca042877",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the main content of the certificate is accurate and complete",
              "fullTitle": "certificate To ensure that the main content of the certificate is accurate and complete",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('main-content'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'for successfully completing the training course as\\nprescribed by the organisation');\n});",
              "err": {},
              "uuid": "512a3d1a-315c-430b-8508-dd1e5a6ff96b",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the date on the certificate is accurate and valid",
              "fullTitle": "certificate To ensure that the date on the certificate is accurate and valid",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('date'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, '/^Date: \\d{2}-\\d{2}-\\d{4}$/');\n});",
              "err": {},
              "uuid": "3a0c8186-9942-4e06-b9bd-697c3f767c9f",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify that the candidate name displayed on the certificate matches the expected name",
              "fullTitle": "certificate To verify that the candidate name displayed on the certificate matches the expected name",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n     // Locate the element containing the candidate's name\n    let candidateNameElement = await driver.findElement(webdriver.By.className('candidate-name'));\n  \n    // Get the text content of the element\n    let candidateName = await candidateNameElement.getText();\n  \n    // Assert that the candidate's name is not empty\n    assert.notStrictEqual(candidateName.trim(), '', 'Candidate name is empty on the certificate.');\n  \n    console.log('Candidate name is present on the certificate.');\n  \n} catch (error) {\n    console.error('An error occurred:', error);\n}\nvar getTitle = await driver.findElement(webdriver.By.className('candidate-name'));\n    getTitle.getText('value').then(function(value) {\nassert.equal(value, '');\n  \n    });",
              "err": {},
              "uuid": "7f582a21-3288-4a31-9bb0-47e24747df8f",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the certificate signature of the president is authentic and valid",
              "fullTitle": "certificate To ensure that the certificate signature of the president is authentic and valid",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('sign-president'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Signature of President');\n});",
              "err": {},
              "uuid": "18f4b6e8-c5f0-4ce5-b29c-f89b154ace58",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the certificate signature of the director  is authentic and valid",
              "fullTitle": "certificate To ensure that the certificate signature of the director  is authentic and valid",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('sign-director'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Signature of Director');\n});",
              "err": {},
              "uuid": "b48bcc99-ae87-4b01-b3d4-3e1ed64efd95",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the logo displayed matches the official logo of the issuing organization",
              "fullTitle": "certificate Verify that the logo displayed matches the official logo of the issuing organization",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    \n    // Find the logo image element\n    const logoElement = await driver.findElement(webdriver.By.xpath(\"//div[@class='org-logo']//img\"));\n    // Check if the logo image is loaded successfully\n    const isLoaded = await logoElement.isDisplayed();\n    // Assert that the logo image is loaded successfully\n    assert.strictEqual(isLoaded, true, 'Logo image is not loaded successfully');\n    console.log('Logo image loaded successfully!');\n} catch (error) {\n    console.error('Logo image loading test failed:', error.message);\n}",
              "err": {},
              "uuid": "b02342b7-1deb-4db7-8cf2-112498f494f6",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Organization Name on Certificate",
              "fullTitle": "certificate Verify Organization Name on Certificate",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('org-name'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Maha Mission Education and Career Council');\n});",
              "err": {},
              "uuid": "e9636395-8172-4f0f-82ff-a9445910aecf",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the address matches the official address of the organization",
              "fullTitle": "certificate Verify that the address matches the official address of the organization",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('org-address'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Office No. 404, Vastu Viva, Besids Sanket Inn, Bhumkar Chowk\\n\\nWakad, Pune, Maharashtra - 411057');\n});\ndriver.quit();",
              "err": {},
              "uuid": "65b952bf-3883-40de-a807-eeafcbcd381d",
              "parentUUID": "e6823368-5fae-46d7-bcb6-72fc052c321e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e23f706d-6c04-476c-9735-4e37ef03f657",
            "6cad93a2-9866-4200-8b16-d4be70ab6350",
            "9806f2cd-2141-4605-8f0e-ef39d8ec003c",
            "1acee5cc-fd90-4c52-a00a-838eca042877",
            "512a3d1a-315c-430b-8508-dd1e5a6ff96b",
            "3a0c8186-9942-4e06-b9bd-697c3f767c9f",
            "7f582a21-3288-4a31-9bb0-47e24747df8f",
            "18f4b6e8-c5f0-4ce5-b29c-f89b154ace58",
            "b48bcc99-ae87-4b01-b3d4-3e1ed64efd95",
            "b02342b7-1deb-4db7-8cf2-112498f494f6",
            "e9636395-8172-4f0f-82ff-a9445910aecf",
            "65b952bf-3883-40de-a807-eeafcbcd381d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2311,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}