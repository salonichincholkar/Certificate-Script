{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-20T07:02:11.480Z",
    "end": "2024-04-20T07:02:25.915Z",
    "duration": 14435,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "194f516e-836e-47f7-a343-695188d8b7e9",
      "title": "",
      "fullFile": "H:\\Assignments\\Selenium\\Certificate Script\\test\\index.js",
      "file": "\\test\\index.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
          "title": "certificate",
          "fullFile": "H:\\Assignments\\Selenium\\Certificate Script\\test\\index.js",
          "file": "\\test\\index.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"certificate\"",
              "fullTitle": "certificate \"before all\" hook in \"certificate\"",
              "timedOut": false,
              "duration": 7102,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new webdriver.Builder().\nwithCapabilities(webdriver.Capabilities.chrome()).\nbuild();",
              "err": {},
              "uuid": "503e7fa2-e708-4100-9d1d-31f78d67e90d",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the validity of a given certificate number",
              "fullTitle": "certificate Verify the validity of a given certificate number",
              "timedOut": false,
              "duration": 6958,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('file:///H:/Assignments/Testing/01%20Kalpesh%20Shewale/MMEAC_Assignment_3-main/preview.html');\n    var getTitle = await driver.findElement(webdriver.By.className('sr-no'));\n    getTitle.getText('value').then(function(value) {\n    assert.match(value, '/Certificate Number: (\\d{4})/');\n    });",
              "err": {},
              "uuid": "2c1efc43-4e5e-4501-b2d3-5410155fd620",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Certificate Title",
              "fullTitle": "certificate Verify Certificate Title",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('title'));\ngetTitle.getText('value').then(function(value) {\n  assert.equal(value, 'Certificate');\n});",
              "err": {},
              "uuid": "e9abab18-d133-4b2d-ab15-20ce03848953",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify the certificate subtitle",
              "fullTitle": "certificate To verify the certificate subtitle",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('subtitle'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'of Appreciation');\n});",
              "err": {},
              "uuid": "943bb54b-18fb-41ff-81fc-9bfd1d7174ee",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Initial Content of Certificate",
              "fullTitle": "certificate Verify Initial Content of Certificate",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('initial-content'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'This Certificate is proudly presented to');\n});",
              "err": {},
              "uuid": "85a6a27e-7856-480e-8673-0bef029d031b",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the main content of the certificate is accurate and complete",
              "fullTitle": "certificate To ensure that the main content of the certificate is accurate and complete",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('main-content'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'for successfully completing the training course as\\nprescribed by the organisation');\n});",
              "err": {},
              "uuid": "708102d6-b970-4d97-a583-814c7f819953",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the date on the certificate is accurate and valid",
              "fullTitle": "certificate To ensure that the date on the certificate is accurate and valid",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('date'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, '/^Date: \\d{2}-\\d{2}-\\d{4}$/');\n});",
              "err": {},
              "uuid": "e7caee07-4455-4ac3-92d3-24710226d6d9",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To verify that the candidate name displayed on the certificate matches the expected name",
              "fullTitle": "certificate To verify that the candidate name displayed on the certificate matches the expected name",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n     // Locate the element containing the candidate's name\n    let candidateNameElement = await driver.findElement(webdriver.By.className('candidate-name'));\n  \n    // Get the text content of the element\n    let candidateName = await candidateNameElement.getText();\n  \n    // Assert that the candidate's name is not empty\n    assert.notStrictEqual(candidateName.trim(), '', 'Candidate name is empty on the certificate.');\n  \n    console.log('Candidate name is present on the certificate.');\n  \n} catch (error) {\n    console.error('An error occurred:', error);\n}\nvar getTitle = await driver.findElement(webdriver.By.className('candidate-name'));\n    getTitle.getText('value').then(function(value) {\nassert.equal(value, '');\n  \n    });",
              "err": {},
              "uuid": "1a401e06-d271-4483-892d-c0044e8f2492",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the certificate signature of the president is authentic and valid",
              "fullTitle": "certificate To ensure that the certificate signature of the president is authentic and valid",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('sign-president'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Signature of President');\n});",
              "err": {},
              "uuid": "ba6243be-935a-4af9-9161-1500a9fe94a6",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "To ensure that the certificate signature of the director  is authentic and valid",
              "fullTitle": "certificate To ensure that the certificate signature of the director  is authentic and valid",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('sign-director'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Signature of Director');\n});",
              "err": {},
              "uuid": "9cda121d-2577-4043-8e57-13712f016063",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the logo displayed matches the official logo of the issuing organization",
              "fullTitle": "certificate Verify that the logo displayed matches the official logo of the issuing organization",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    \n    // Find the logo image element\n    const logoElement = await driver.findElement(webdriver.By.xpath(\"//div[@class='org-logo']//img\"));\n    // Check if the logo image is loaded successfully\n    const isLoaded = await logoElement.isDisplayed();\n    // Assert that the logo image is loaded successfully\n    assert.strictEqual(isLoaded, true, 'Logo image is not loaded successfully');\n    console.log('Logo image loaded successfully!');\n} catch (error) {\n    console.error('Logo image loading test failed:', error.message);\n}",
              "err": {},
              "uuid": "c6a830fd-0826-47fd-ac41-d4db02510d72",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Organization Name on Certificate",
              "fullTitle": "certificate Verify Organization Name on Certificate",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('org-name'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Maha Mission Education and Career Council');\n});",
              "err": {},
              "uuid": "f1c82f60-2d0c-48f1-9bb1-83da492d26b2",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the address matches the official address of the organization",
              "fullTitle": "certificate Verify that the address matches the official address of the organization",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var getTitle = await driver.findElement(webdriver.By.className('org-address'));\ngetTitle.getText('value').then(function(value) {\nassert.equal(value, 'Office No. 404, Vastu Viva, Besids Sanket Inn, Bhumkar Chowk\\n\\nWakad, Pune, Maharashtra - 411057');\n});\ndriver.quit();",
              "err": {},
              "uuid": "87e778d9-4cd8-4a99-ac9f-ab733ed255ac",
              "parentUUID": "3013265d-8de7-4dae-b099-6ee0dc5c8dd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c1efc43-4e5e-4501-b2d3-5410155fd620",
            "e9abab18-d133-4b2d-ab15-20ce03848953",
            "943bb54b-18fb-41ff-81fc-9bfd1d7174ee",
            "85a6a27e-7856-480e-8673-0bef029d031b",
            "708102d6-b970-4d97-a583-814c7f819953",
            "e7caee07-4455-4ac3-92d3-24710226d6d9",
            "1a401e06-d271-4483-892d-c0044e8f2492",
            "ba6243be-935a-4af9-9161-1500a9fe94a6",
            "9cda121d-2577-4043-8e57-13712f016063",
            "c6a830fd-0826-47fd-ac41-d4db02510d72",
            "f1c82f60-2d0c-48f1-9bb1-83da492d26b2",
            "87e778d9-4cd8-4a99-ac9f-ab733ed255ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}